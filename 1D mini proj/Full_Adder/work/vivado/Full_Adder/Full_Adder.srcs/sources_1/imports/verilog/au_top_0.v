/*
   This file was generated automatically by Alchitry Labs version 1.2.0.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module au_top_0 (
    input clk,
    input rst_n,
    output reg [7:0] led,
    input usb_rx,
    output reg usb_tx,
    output reg [23:0] io_led,
    output reg [7:0] io_seg,
    output reg [3:0] io_sel,
    input [4:0] io_button,
    input [23:0] io_dip,
    output reg [2:0] out,
    input [1:0] in
  );
  
  
  
  reg rst;
  
  wire [1-1:0] M_reset_cond_out;
  reg [1-1:0] M_reset_cond_in;
  reset_conditioner_1 reset_cond (
    .clk(clk),
    .in(M_reset_cond_in),
    .out(M_reset_cond_out)
  );
  wire [1-1:0] M_fsmFA_a;
  wire [1-1:0] M_fsmFA_b;
  wire [1-1:0] M_fsmFA_c;
  fsmFA_2 fsmFA (
    .clk(clk),
    .rst(rst),
    .a(M_fsmFA_a),
    .b(M_fsmFA_b),
    .c(M_fsmFA_c)
  );
  
  always @* begin
    M_reset_cond_in = ~rst_n;
    rst = M_reset_cond_out;
    usb_tx = usb_rx;
    led = 8'h00;
    io_led = 24'h000000;
    io_seg = 8'hff;
    io_sel = 4'hf;
    if (io_dip[0+7+0-:1] == 1'h0) begin
      out[0+0-:1] = M_fsmFA_a;
      out[1+0-:1] = M_fsmFA_b;
      out[2+0-:1] = M_fsmFA_c;
    end else begin
      out[0+0-:1] = io_dip[0+0+0-:1];
      out[1+0-:1] = io_dip[0+1+0-:1];
      out[2+0-:1] = io_dip[0+2+0-:1];
      io_led[0+0+0-:1] = io_dip[0+0+0-:1] ^ io_dip[0+1+0-:1] ^ io_dip[0+2+0-:1];
      io_led[0+1+0-:1] = (io_dip[0+0+0-:1] & io_dip[0+1+0-:1]) | (io_dip[0+0+0-:1] & io_dip[0+2+0-:1]) | (io_dip[0+1+0-:1] & io_dip[0+2+0-:1]);
    end
  end
endmodule
